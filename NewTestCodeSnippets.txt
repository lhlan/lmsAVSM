// ==========================
// 1. Start PHP Session
// ==========================
add_action('init', function() {
    if (!session_id()) {
        session_start();
    }
});

// ==========================
// 2. Shortcode for Form + Quiz
// ==========================
add_shortcode('quiz_with_user_info', function($atts) {
    $atts = shortcode_atts(['quiz_id' => ''], $atts);

    ob_start(); ?>
    <form id="quiz-user-info">
        <label>Name:</label><br>
        <input type="text" name="user_name" required><br><br>

        <label>Email:</label><br>
        <input type="email" name="user_email" required><br><br>

        <label>Phone:</label><br>
        <input type="text" name="user_phone" required><br><br>

        <button type="submit">Start Quiz</button>
    </form>

    <div id="quiz-container" style="display:none; margin-top:20px;">
        <?php echo do_shortcode('[ld_quiz quiz_id="'.esc_attr($atts['quiz_id']).'"]'); ?>
    </div>

    <script>
    document.getElementById("quiz-user-info").addEventListener("submit", function(e) {
        e.preventDefault();

        var form = e.target;
        var formData = new FormData(form);

        // Save via AJAX
        fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: new URLSearchParams({
                action: "save_quiz_user_info",
                user_name: formData.get("user_name"),
                user_email: formData.get("user_email"),
                user_phone: formData.get("user_phone")
            })
        }).then(res => res.json()).then(() => {
            form.style.display = "none";
            document.getElementById("quiz-container").style.display = "block";
        });
    });
    </script>
    <?php
    return ob_get_clean();
});

// ==========================
// 3. AJAX Handler to Save Session Data
// ==========================
add_action('wp_ajax_nopriv_save_quiz_user_info', 'save_quiz_user_info');
add_action('wp_ajax_save_quiz_user_info', 'save_quiz_user_info');

function save_quiz_user_info() {
    $_SESSION['quiz_user_name']  = sanitize_text_field($_POST['user_name']);
    $_SESSION['quiz_user_email'] = sanitize_email($_POST['user_email']);
    $_SESSION['quiz_user_phone'] = sanitize_text_field($_POST['user_phone']);
    wp_send_json_success("Saved");
}

// ==========================
// 4. Quiz Completion Hook
// ==========================
add_action('learndash_quiz_completed', 'my_quiz_completed_handler', 10, 2);

function my_quiz_completed_handler($quiz_data, $current_user = null) {
    // Trace hook firing for diagnostics
    error_log('[LD] learndash_quiz_completed fired');
    // Safely extract quiz and user details from LearnDash hook payload
    $quiz_id = 0;
    if (isset($quiz_data['quiz'])) {
        $quiz_value = $quiz_data['quiz'];
        $quiz_id = (is_object($quiz_value) && isset($quiz_value->ID)) ? intval($quiz_value->ID) : intval($quiz_value);
    }

    $score      = isset($quiz_data['score']) ? $quiz_data['score'] : 0;
    $percentage = isset($quiz_data['percentage']) ? $quiz_data['percentage'] : 0;
    $passed     = !empty($quiz_data['pass']) ? (int) $quiz_data['pass'] : 0;

    $user_id = 0;
    if (is_object($current_user) && isset($current_user->ID)) {
        $user_id = intval($current_user->ID);
    } elseif (!empty($quiz_data['user']) && is_object($quiz_data['user']) && isset($quiz_data['user']->ID)) {
        $user_id = intval($quiz_data['user']->ID);
    } else {
        $user_id = get_current_user_id();
    }

    // Retrieve stored info
    $user_name  = isset($_SESSION['quiz_user_name']) ? $_SESSION['quiz_user_name'] : '';
    $user_email = isset($_SESSION['quiz_user_email']) ? $_SESSION['quiz_user_email'] : '';
    $user_phone = isset($_SESSION['quiz_user_phone']) ? $_SESSION['quiz_user_phone'] : '';

    // Fallback to WP user info if session fields are empty
    if (($user_name === '' || $user_email === '') && $user_id) {
        $wp_user = get_userdata($user_id);
        if ($wp_user) {
            if ($user_name === '') {
                $user_name = $wp_user->display_name;
            }
            if ($user_email === '') {
                $user_email = $wp_user->user_email;
            }
        }
    }

    $data = array(
        'quiz_id'    => $quiz_id,
        'score'      => $score,
        'percentage' => $percentage,
        'passed'     => $passed,
        'user_id'    => $user_id,
        'user_name'  => $user_name,
        'user_email' => $user_email,
        'user_phone' => $user_phone,
    );

    // Log minimal payload without PII
    error_log('[LD] Sending to GAS: quiz_id=' . $quiz_id . ', user_id=' . $user_id . ', score=' . $score . ', percentage=' . $percentage . ', passed=' . $passed);

    my_send_to_gsheet($data);

    // Clear session data after sending to avoid duplicate submissions
    unset($_SESSION['quiz_user_name'], $_SESSION['quiz_user_email'], $_SESSION['quiz_user_phone']);
}

// ==========================
// 5. Send Data to Google Sheets
// ==========================
function my_send_to_gsheet($data) {
    // Use the same endpoint verified via Postman
    $url = "https://script.google.com/macros/s/AKfycbzysvZDAYwmDzjbaolDmWBNVlRrqnlYke9sTyOGeKXDDNYhTzjaknUqkBNQ7KL5Ka5C/exec"; // TODO: move to option/settings

    // Send as form-encoded fields so Google Apps Script can read via e.parameter
    $args = [
        'body'    => $data,
        'method'  => 'POST',
        'timeout' => 20,
    ];

    $response = wp_remote_post($url, $args);

    // Debug log
    if (is_wp_error($response)) {
        error_log('GSheet error: ' . $response->get_error_message());
    } else {
        $code = wp_remote_retrieve_response_code($response);
        $body = wp_remote_retrieve_body($response);
        error_log('GSheet response code: ' . $code . ' body: ' . $body);
    }
}